{"version":3,"sources":["ColorModeSwitcher.js","utils/utils.js","components/Map.js","components/Header.js","components/Footer.js","components/DeleteButton.js","components/Destinations.js","components/Summary.js","components/Tabs.js","components/Page.js","components/InfoModal.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","saveLocation","position","userLocation","destinations","setDestinations","a","fetch","process","REACT_APP_LOCATIONIQ","lat","lng","then","response","json","address","place","city","town","road","suburb","position_name","country","POI","data","forEach","element","push","name","type","distance","length","slice","catch","e","REACT_APP_BING","Math","round","resourceSets","resources","results","travelDistance","duration","travelDuration","localStorage","setItem","JSON","stringify","LatLng","favorite","prevState","DefaultIcon","L","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","Map","destinationsState","positionState","setPosition","React","useState","setName","isLoading","setIsLoading","setUserLocation","LocationMarker","map","useMap","useEffect","locate","on","latlng","flyTo","getZoom","useMapEvents","click","Popup","preventDefault","document","getElementById","scrollIntoView","top","left","behavior","fetchData","direction","flexBasis","justify","id","style","order","MapContainer","center","zoom","TileLayer","url","attribution","destination","index","mb","ml","alignSelf","colorScheme","disabled","loadingText","Header","w","textAlign","Footer","mt","m","isExternal","DeleteButton","isOpen","setIsOpen","onClose","cancelRef","useRef","motionPreset","leastDestructiveRef","isCentered","fontWeight","ref","window","removeItem","deleteEntries","Destinations","allDestinations","parse","getItem","as","FaStar","cursor","_hover","items","item","FaLocationArrow","FaTrash","indexOf","splice","deleteEntry","minH","initialScale","in","status","minW","right","Summary","defaultIndex","_expanded","flex","visibility","pb","wrap","flexDirection","point","fontStyle","toUpperCase","Tabs","align","isFitted","Page","spacing","InfoModal","useDisclosure","onOpen","FaInfoCircle","marginRight","App","theme","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.a8937648.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","const deleteEntries = setDestinations => {\n  window.localStorage.removeItem('my_destinations');\n  setDestinations([]);\n};\n\nconst deleteEntry = (destination, allDestinations, setDestinations) => {\n  const index = allDestinations.indexOf(destination);\n  if (index > -1) {\n    allDestinations.splice(index, 1);\n  }\n  window.localStorage.setItem(\n    'my_destinations',\n    JSON.stringify(allDestinations)\n  );\n  setDestinations(allDestinations);\n};\n\nconst saveLocation = async (\n  position,\n  userLocation,\n  destinations,\n  setDestinations\n) => {\n  //get the name of the location from LatLng\n  let response;\n  response = await fetch(\n    `https://us1.locationiq.com/v1/reverse.php?key=${process.env.REACT_APP_LOCATIONIQ}&lat=` +\n      position.lat +\n      '&lon=' +\n      position.lng +\n      '&format=json'\n  ).then(response => response.json());\n  const address = response.address;\n  const place = address.city || address.town || address.road || address.suburb;\n  const position_name = `${place}, ${address.country}`;\n\n  //get the points of interest\n  let POI = [];\n  response = await fetch(\n    `https://us1.locationiq.com/v1/nearby.php?key=${process.env.REACT_APP_LOCATIONIQ}&lat=` +\n      position.lat +\n      '&lon=' +\n      position.lng +\n      '&tag=restaurant&radius=3000&format=json'\n  )\n    .then(response => response.json())\n    .then(data => {\n      data.forEach(element => {\n        POI.push({\n          name: element.name,\n          type: element.type,\n          distance: element.distance,\n        });\n      });\n      if (POI.length > 3) POI = POI.slice(0, 3);\n    })\n    .catch(e => e);\n\n  //get the distance and duration\n  response =\n    userLocation &&\n    (await fetch(\n      'https://dev.virtualearth.net/REST/v1/Routes/DistanceMatrix?origins=' +\n        userLocation.lat +\n        ',' +\n        userLocation.lng +\n        '&destinations=' +\n        position.lat +\n        ',' +\n        position.lng +\n        `&travelMode=driving&key=${process.env.REACT_APP_BING}`\n    ).then(response => response.json()));\n\n  const distance =\n    Math.round(\n      response.resourceSets[0].resources[0].results[0].travelDistance * 100\n    ) / 100;\n  const duration =\n    Math.round(\n      (response.resourceSets[0].resources[0].results[0].travelDuration / 60) *\n        100\n    ) / 100;\n\n  //add destination to the local storage\n  localStorage.setItem(\n    'my_destinations',\n    JSON.stringify([\n      ...destinations,\n      {\n        LatLng: {\n          lat: Math.round(position.lat * 100) / 100,\n          lng: Math.round(position.lng * 100) / 100,\n        },\n        name: position_name,\n        distance: distance,\n        duration: duration,\n        POI: POI,\n        favorite: false,\n      },\n    ])\n  );\n  //add the destination to the local state\n  setDestinations(prevState => [\n    ...prevState,\n    {\n      LatLng: {\n        lat: Math.round(position.lat * 100) / 100,\n        lng: Math.round(position.lng * 100) / 100,\n      },\n      name: position_name,\n      distance: distance,\n      duration: duration,\n    },\n  ]);\n};\n\nexport { deleteEntries, deleteEntry, saveLocation };","import React from 'react';\nimport { Text, VStack, Flex } from '@chakra-ui/react';\nimport L from 'leaflet';\nimport { Button } from '@chakra-ui/button';\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  useMapEvents,\n  useMap,\n} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { saveLocation } from '../utils/utils';\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst Map = ({ destinationsState, positionState }) => {\n  //for marker position\n  const [position, setPosition] = positionState;\n  const [name, setName] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [destinations, setDestinations] = destinationsState;\n  const [userLocation, setUserLocation] = React.useState(null);\n\n  //   get the location name to display the moment user clicks the map\n  React.useEffect(() => {\n    if (!position) return;\n    setIsLoading(true);\n    // setName('Fetching Location Name...');\n    const lat = position.lat;\n    const lng = position.lng;\n\n    let name;\n\n    const fetchData = async () => {\n      name = await fetch(\n        `https://us1.locationiq.com/v1/reverse.php?key=${process.env.REACT_APP_LOCATIONIQ}&lat=` +\n          lat +\n          '&lon=' +\n          lng +\n          '&format=json'\n      ).then(response => response.json());\n      const address = name.address;\n      const place =\n        address &&\n        (address.city || address.town || address.road || address.suburb);\n      address && setName(`${place}, ${address.country}`);\n    };\n\n    fetchData();\n    setIsLoading(false);\n  }, [position]);\n\n  function LocationMarker() {\n    const map = useMap();\n\n    //go to the user's location on open\n    React.useEffect(() => {\n      map.locate().on('locationfound', function (e) {\n        setUserLocation(e.latlng);\n        // setPosition(e.latlng);\n        map.flyTo(e.latlng, 12);\n      });\n    }, [map]);\n\n    React.useEffect(() => {\n      if (!position) return;\n      map.flyTo(position, map.getZoom() > 12 ? map.getZoom() : 12);\n    }, [position]);\n\n    //add a new marker and go to the location when user clicks on map\n    useMapEvents({\n      click(e) {\n        setPosition(e.latlng);\n        map.flyTo(e.latlng, map.getZoom());\n      },\n    });\n\n    return position === null ? null : (\n      <Marker position={position}>\n        <Popup>You chose here</Popup>\n      </Marker>\n    );\n  }\n\n  async function addDestination(e) {\n    setIsLoading(true);\n    e.preventDefault();\n    await saveLocation(position, userLocation, destinations, setDestinations);\n    setIsLoading(false);\n    document\n      .getElementById('tabs')\n      .scrollIntoView({ top: 0, left: 0, behavior: 'smooth' });\n  }\n\n  return (\n    <Flex direction={['column', 'row']} flexBasis=\"0\" justify=\"space-around\">\n      <div id=\"map\" style={{ order: 1 }}>\n        <MapContainer\n          center={{\n            lat: 52.52437,\n            lng: 13.41053,\n          }}\n          zoom={12}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          {destinations.map((destination, index) => {\n            return (\n              <Marker\n                position={destination.LatLng}\n                key={`${position}, ${index}`}\n              >\n                <Popup>\n                  {destination.LatLng.lat}, {destination.LatLng.lng}\n                </Popup>\n              </Marker>\n            );\n          })}\n          <LocationMarker />\n        </MapContainer>\n      </div>\n      <VStack\n        order={[0, 1]}\n        mb={['10', null]}\n        ml={[null, '10']}\n        alignSelf=\"center\"\n      >\n        <Text fontSize={[null, '3xl']}>\n          {!position && 'Choose a location to get started!'}\n        </Text>\n        {name && <Text fontSize={[null, '3xl']}>{name}</Text>}\n        {position && (\n          <Text>\n            Latitude: {Math.round(position.lat, 1)}, Longitude:{' '}\n            {Math.round(position.lng)}\n          </Text>\n        )}\n        <Button\n          colorScheme={position && position !== userLocation && 'green'}\n          onClick={addDestination}\n          disabled={position && position !== userLocation ? false : true}\n          isLoading={isLoading}\n          loadingText=\"Loading\"\n        >\n          {position && position !== userLocation\n            ? `Save Location`\n            : `Navigate the map to add a location`}\n        </Button>\n      </VStack>\n    </Flex>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport { Heading, Flex } from '@chakra-ui/layout';\n\nconst Header = () => {\n  return (\n    <>\n    <Flex w=\"100%\" justify=\"center\">\n\n      <Heading size=\"4xl\" w=\"100%\" textAlign=\"center\" mb=\"10\">\n        Project-task-kloudone\n      </Heading>\n    </Flex>\n    </>\n  );\n};\n\nexport default Header;\n","import { Box, Text, Link } from '@chakra-ui/layout';\nimport React from 'react';\nimport { FaExternalLinkAlt } from 'react-icons/fa';\n\nconst Footer = () => {\n  return (\n    <Box mt=\"\">\n      <Text m=\"\" fontSize=\"\">\n        <Link\n          \n          isExternal\n         \n        >\n        \n          <FaExternalLinkAlt\n            \n          />\n        </Link>\n      </Text>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n} from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/button';\nimport { deleteEntries } from '../utils/utils';\n\nconst DeleteButton = ({ setDestinations }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const onClose = () => setIsOpen(false);\n  const cancelRef = React.useRef();\n\n  return (\n    <>\n      <Button colorScheme=\"red\" onClick={() => setIsOpen(true)}>\n        Delete All Destinations\n      </Button>\n\n      <AlertDialog\n        motionPreset=\"slideInBottom\"\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n        isCentered\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Delete All Destinations\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure? You can't undo this action afterwards.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button\n                colorScheme=\"red\"\n                onClick={() => deleteEntries(setDestinations)}\n                ml={3}\n              >\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Spacer,\n  VStack,\n  HStack,\n  Box,\n  Text,\n} from '@chakra-ui/react';\nimport { Alert, AlertIcon } from '@chakra-ui/react';\nimport { CloseButton } from '@chakra-ui/close-button';\nimport { Icon } from '@chakra-ui/icon';\nimport { ScaleFade } from '@chakra-ui/react';\nimport { FaTrash, FaStar, FaLocationArrow } from 'react-icons/fa';\nimport { deleteEntry } from '../utils/utils';\nimport DeleteButton from './DeleteButton';\n\nconst Destinations = ({ destinationsState, positionState }) => {\n  const [position, setPosition] = positionState;\n  const [destinations, setDestinations] = destinationsState;\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const allDestinations = JSON.parse(localStorage.getItem('my_destinations'));\n\n  return (\n    <VStack>\n      {allDestinations?.length > 0 ? (\n        <>\n          <Table variant=\"simple\" mb=\"10\">\n            <Thead>\n              <Tr>\n                <Th>Location</Th>\n                <Th></Th>\n                <Th></Th>\n              </Tr>\n            </Thead>\n            <Tbody fontSize={['0.8em', '1em']}>\n              {allDestinations?.map((destination, index) => (\n                <Tr key={index}>\n                  <Td>\n                    <HStack>\n                      <Icon\n                        as={FaStar}\n                        cursor=\"pointer\"\n                        color={destination.favorite ? 'yellow' : 'gray.200'}\n                        _hover={{\n                          color: 'yellow',\n                        }}\n                        onClick={() => {\n                          \n                          let items = [...allDestinations];\n\n                          let item = { ...destination };\n\n                          item.favorite = !item.favorite;\n\n                          items[index] = item;\n\n                          localStorage.setItem(\n                            'my_destinations',\n                            JSON.stringify(items)\n                          );\n                          setDestinations(items);\n                        }}\n                      />\n                      <Text>{destination.name}</Text>\n                    </HStack>\n                  </Td>\n                  <Td>\n                    <Icon\n                      as={FaLocationArrow}\n                      onClick={() => {\n                        setPosition(destination.LatLng);\n                        document.getElementById('map').scrollIntoView({\n                          top: 0,\n                          left: 0,\n                          behavior: 'smooth',\n                        });\n                      }}\n                      cursor=\"pointer\"\n                      color=\"green\"\n                    />\n                  </Td>\n\n\n                  <Td>\n                    <Icon\n                      as={FaTrash}\n                      onClick={() => {\n                        deleteEntry(\n                          destination,\n                          allDestinations,\n                          setDestinations\n                        );\n                        setIsOpen(true);\n                      }}\n                      color=\"red\"\n                      cursor=\"pointer\"\n                    />\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n          <Spacer />\n          <DeleteButton setDestinations={setDestinations} />\n          <Box minH=\"3em\">\n            {isOpen && (\n              <ScaleFade initialScale={0.9} in={isOpen}>\n                <Alert\n                  fontSize=\"0.9em\"\n                  status=\"success\"\n                  minW={['15em', '20em']}\n                >\n                  <AlertIcon />\n                  Destination Removed Successfully!\n                  <CloseButton\n                    onClick={() => setIsOpen(false)}\n                    position=\"absolute\"\n                    right=\"8px\"\n                    top=\"8px\"\n                  />\n                </Alert>\n              </ScaleFade>\n            )}\n          </Box>\n        </>\n      ) : null}{' '}\n    </VStack>\n  );\n};\n\nexport default Destinations;\n\n","import React from 'react';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  HStack,\n} from '@chakra-ui/react';\nimport { Stat, StatLabel, StatNumber, StatHelpText } from '@chakra-ui/react';\nimport { Box, Flex, Text, VStack } from '@chakra-ui/layout';\nimport { Icon } from '@chakra-ui/icon';\nimport { FaStar } from 'react-icons/fa';\n\nconst Summary = ({ destinationsState }) => {\n  const allDestinations = JSON.parse(localStorage.getItem('my_destinations'));\n\n  return (\n    <div>\n      <Accordion defaultIndex={[0]} fontSize={['0.8em', '1em']}>\n        {allDestinations?.map((destination, index) => {\n          return (\n            <AccordionItem key={index}>\n              <h2>\n                <AccordionButton _expanded={{ fontWeight: '700' }}>\n                  <Box flex=\"1\" textAlign=\"left\" m=\"1\">\n                  <HStack>\n\n                  <Icon \n                    as={FaStar}\n                    color=\"yellow\"\n                    visibility={destination.favorite ? \"visible\" : \"hidden\"}\n                    \n                  />\n                    <Text fontSize=\"1.2em\" m={1.5}>\n                      {destination.name}\n                    </Text>\n                  </HStack>\n                  </Box>\n                  <AccordionIcon />\n                </AccordionButton>\n              </h2>\n              <AccordionPanel pb={4}>\n                <VStack>\n                  <Text\n                    as=\"h2\"\n                    textAlign=\"left\"\n                    w=\"100%\"\n                    fontWeight=\"600\"\n                    fontSize=\"1.1em\"\n                  >\n                    Location Details\n                  </Text>\n                  <Flex\n                    justify=\"space-around\"\n                    w=\"100%\"\n                    wrap=\"wrap\"\n                    flexDirection={['column', 'row']}\n                  >\n                    <Stat m={['10', 0]}>\n                      <StatLabel>Longitude</StatLabel>\n                      <StatNumber>\n                        {Math.round(destination.LatLng.lat * 100) / 100}\n                      </StatNumber>\n                      <StatHelpText>Degrees</StatHelpText>\n                    </Stat>\n                    <Stat>\n                      <StatLabel>Latitude</StatLabel>\n                      <StatNumber>\n                        {Math.round(destination.LatLng.lng * 100) / 100}\n                      </StatNumber>\n                      <StatHelpText>Degrees</StatHelpText>\n                    </Stat>\n                  </Flex>\n                </VStack>\n                {/* trip details */}\n                <VStack mt=\"10\">\n                  <Text\n                    as=\"h2\"\n                    textAlign=\"left\"\n                    w=\"100%\"\n                    fontWeight=\"600\"\n                    fontSize=\"1.1em\"\n                  >\n                    Trip Details\n                  </Text>\n                  <Flex\n                    justify=\"space-around\"\n                    w=\"100%\"\n                    wrap=\"wrap\"\n                    flexDirection={['column', 'row']}\n                  >\n                    <Stat m={['10', 0]}>\n                      <StatLabel>Distance From Your Location</StatLabel>\n                      <StatNumber>{destination.distance}</StatNumber>\n                      <StatHelpText>KM</StatHelpText>\n                    </Stat>\n                    <Stat>\n                      <StatLabel>Driving Duration</StatLabel>\n                      <StatNumber>{destination.duration}</StatNumber>\n                      <StatHelpText>Hours</StatHelpText>\n                    </Stat>\n                  </Flex>\n                </VStack>\n\n                {/* points of interest */}\n                <VStack mt=\"10\">\n                  <Text\n                    as=\"h2\"\n                    textAlign=\"left\"\n                    w=\"100%\"\n                    fontWeight=\"600\"\n                    fontSize=\"1.1em\"\n                  >\n                    {destination.POI && 'Nearby Points of Interest'}\n                  </Text>\n                  <Flex wrap=\"wrap\">\n                    {destination.POI?.map((point, index) => {\n                      return (\n                        <Stat m=\"10\" key={index}>\n                          <StatLabel fontSize=\"0.8em\" fontStyle=\"italic\">\n                            {point.type.toUpperCase()}\n                          </StatLabel>\n                          <StatNumber fontSize=\"01em\">{point.name}</StatNumber>\n                          <StatHelpText>\n                            {point.distance} metres away\n                          </StatHelpText>\n                        </Stat>\n                      );\n                    })}\n                  </Flex>\n                </VStack>\n              </AccordionPanel>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n    </div>\n  );\n};\n\nexport default Summary;\n","import React from 'react';\nimport {\n  Tabs as ChTabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from '@chakra-ui/react';\nimport Destinations from './Destinations';\nimport Summary from './Summary';\nimport { Text } from '@chakra-ui/layout';\n\nconst Tabs = ({ destinationsState, positionState }) => {\n  const allDestinations = JSON.parse(localStorage.getItem('my_destinations'));\n\n  return (\n    <div id=\"tabs\">\n      <ChTabs\n        align=\"center\"\n        isFitted\n        w={['90vw', '55vw']}\n        variant=\"enclosed\"\n        size=\"lg\"\n      >\n        <TabList>\n          <Tab>Add List</Tab>\n          <Tab>Detail List</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            {allDestinations ? (\n              <>\n                <Text\n                  fontSize=\"3xl\"\n                  textAlign=\"left\"\n                  fontWeight=\"600\"\n                  mt=\"5\"\n                  mb=\"5\"\n                >\n                  {allDestinations.length} Pins\n                </Text>\n                <Destinations\n                  destinationsState={destinationsState}\n                  positionState={positionState}\n                />\n              </>\n            ) : (\n              <Text as=\"h1\">List</Text>\n            )}\n          </TabPanel>\n          <TabPanel>\n            {allDestinations ? (\n              <Summary destinationsState={destinationsState} />\n            ) : (\n              <Text as=\"h1\">List</Text>\n            )}\n          </TabPanel>\n        </TabPanels>\n      </ChTabs>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport { VStack } from '@chakra-ui/react';\nimport Map from './Map';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Tabs from './Tabs';\n\nconst Page = () => {\n  const [destinations, setDestinations] = React.useState(\n    JSON.parse(localStorage.getItem('my_destinations')) || []\n  );\n  const [position, setPosition] = React.useState(null);\n\n  return (\n    <VStack spacing={8}>\n      <Header />\n      <Map\n        destinationsState={[destinations, setDestinations]}\n        positionState={[position, setPosition]}\n      />\n      <Tabs\n        destinationsState={[destinations, setDestinations]}\n        positionState={[position, setPosition]}\n      />\n\n      <Footer />\n    </VStack>\n  );\n};\n\nexport default Page;\n","import React from 'react'\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n  } from '@chakra-ui/react'\n  import {\n    ListItem,\n    OrderedList,\n  } from '@chakra-ui/react'\nimport { Button } from '@chakra-ui/button'\nimport { useDisclosure } from '@chakra-ui/hooks'\nimport { FaInfoCircle } from 'react-icons/fa'\nimport { IconButton } from '@chakra-ui/react';\n\n\nconst InfoModal = props => {\n    const { isOpen, onOpen, onClose } = useDisclosure()\n  \n    return (\n      <>\n        <IconButton\n        size=\"sm\"\n        aria-label={`Site Info`}\n        as={FaInfoCircle}\n        marginRight=\"\"\n        cursor=\"pointer\"\n        onClick={onOpen}\n        {...props}\n        />\n  \n        <Modal onClose={onClose} isOpen={isOpen} isCentered >\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader fontSize=\"\"></ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n                <OrderedList  spacing={3}>\n                    <ListItem>I should be able to add destinations</ListItem>\n                    <ListItem>Display points of interest between each destination.</ListItem>\n                    <ListItem>Use the dates.</ListItem>\n                    <ListItem>click on a map (with an API call)</ListItem>\n                    <ListItem> I'd like my data to be stored in my browsers local storage</ListItem>\n                </OrderedList>\n            </ModalBody>\n            <ModalFooter>\n              <Button onClick={onClose} colorScheme=\"\"></Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      </>\n    )\n  }\n\nexport default InfoModal ","import React from 'react';\nimport { ChakraProvider, Box, Grid, theme, HStack } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport './App.css';\n\nimport Page from './components/Page';\nimport InfoModal from './components/InfoModal';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Grid minH=\"100vh\" p={3}>\n        <HStack justify=\"space-between\">\n          <InfoModal size=\"10\"/>\n          <ColorModeSwitcher  />\n        </HStack>\n          <Page />\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}